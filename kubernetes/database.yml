apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "database"
  labels:
    app.kubernetes.io/instance: "apollo-pubsub-demo"
    app.kubernetes.io/component: "database"
spec:
  serviceName: "database"
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: "apollo-pubsub-demo"
      app.kubernetes.io/component: "database"
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: "apollo-pubsub-demo"
        app.kubernetes.io/component: "database"
    spec:
      initContainers:
        - name: "database-init"
          image: busybox
          command: ["sh", "-c", "chmod -R 777 /data"]
          volumeMounts:
            - name: "pvc"
              mountPath: "/data"
      containers:
        - name: "database"
          image: "amazon/dynamodb-local"
          ports:
            - containerPort: 8000
          resources:
            requests:
              cpu: 200m
              memory: 256Mi
            limits:
              cpu: 200m
              memory: 256Mi
          volumeMounts:
            - name: "pvc"
              subPath: "data-0"
              mountPath: "/data"
  volumeClaimTemplates:
    - metadata:
        name: "pvc"
        labels:
          app.kubernetes.io/instance: "apollo-pubsub-demo"
          app.kubernetes.io/component: "database"
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: "database"
  namespace: "kpatel20538"
  labels:
    app.kubernetes.io/instance: "apollo-pubsub-demo"
    app.kubernetes.io/component: "database"
spec:
  ports:
    - name: "db"
      port: 8000
  selector:
    app.kubernetes.io/instance: "apollo-pubsub-demo"
    app.kubernetes.io/component: "database"
