apiVersion: apps/v1
kind: Deployment
metadata:
  name: "apollo"
  namespace: "kpatel20538"
  labels:
    app.kubernetes.io/instance: "apollo-pubsub-demo"
    app.kubernetes.io/component: "apollo"
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/instance: "apollo-pubsub-demo"
      app.kubernetes.io/component: "apollo"
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: "apollo-pubsub-demo"
        app.kubernetes.io/component: "apollo"
    spec:
      initContainers:
        - name: apollo-load
          image: kpatel20538/apollo-pubsub-demo:apollo
          command:
            - npm
            - run
            - load
          env:
            - name: "AWS_ACCESS_KEY_ID"
              value: "UNUSEDVALUE"
            - name: "AWS_SECRET_ACCESS_KEY"
              value: "UNUSEDVALUE"
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
            limits:
              cpu: 100m
              memory: 256Mi
      containers:
        - name: "apollo"
          image: "kpatel20538/apollo-pubsub-demo:apollo"
          ports:
            - containerPort: 8080
          env:
            - name: "AWS_ACCESS_KEY_ID"
              value: "UNUSEDVALUE"
            - name: "AWS_SECRET_ACCESS_KEY"
              value: "UNUSEDVALUE"
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 100m
              memory: 128Mi

---
apiVersion: v1
kind: Service
metadata:
  name: "apollo"
  namespace: "kpatel20538"
  labels:
    app.kubernetes.io/instance: "apollo-pubsub-demo"
    app.kubernetes.io/component: "apollo"
  annotations:
    dev.okteto.com/auto-ingress: "true"
spec:
  ports:
    - name: "web"
      port: 8080
  selector:
    app.kubernetes.io/instance: "apollo-pubsub-demo"
    app.kubernetes.io/component: "apollo"
